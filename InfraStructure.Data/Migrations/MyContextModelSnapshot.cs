// <auto-generated />
using System;
using InfraStructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InfraStructure.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Party", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parties");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Party");
                });

            modelBuilder.Entity("Domain.Principal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Principals");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Principal");
                });

            modelBuilder.Entity("Domain.BusinessParty", b =>
                {
                    b.HasBaseType("Domain.Party");

                    b.Property<string>("NationalId")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Business");
                });

            modelBuilder.Entity("Domain.IndividualParty", b =>
                {
                    b.HasBaseType("Domain.Party");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Individual");
                });

            modelBuilder.Entity("Domain.Group", b =>
                {
                    b.HasBaseType("Domain.Principal");

                    b.HasDiscriminator().HasValue("Group");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.HasBaseType("Domain.Principal");

                    b.HasDiscriminator().HasValue("User");
                });

            modelBuilder.Entity("Domain.Principal", b =>
                {
                    b.OwnsMany("Domain.Membership", "Memberships", b1 =>
                        {
                            b1.Property<Guid>("PrincipalId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<Guid>("GroupId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("JoinDate")
                                .HasColumnType("datetime2");

                            b1.HasKey("PrincipalId", "Id");

                            b1.HasIndex("GroupId");

                            b1.ToTable("Membership");

                            b1.HasOne("Domain.Group", null)
                                .WithMany()
                                .HasForeignKey("GroupId")
                                .OnDelete(DeleteBehavior.NoAction)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("PrincipalId");
                        });

                    b.OwnsOne("Domain.PartyRef", "Party", b1 =>
                        {
                            b1.Property<Guid>("PrincipalId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("JoinDate")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("PartyId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("PrincipalId");

                            b1.HasIndex("PartyId")
                                .IsUnique()
                                .HasFilter("[Party_PartyId] IS NOT NULL");

                            b1.ToTable("Principals");

                            b1.HasOne("Domain.Party", null)
                                .WithOne()
                                .HasForeignKey("Domain.PartyRef", "PartyId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("PrincipalId");
                        });

                    b.Navigation("Memberships");

                    b.Navigation("Party");
                });
#pragma warning restore 612, 618
        }
    }
}
